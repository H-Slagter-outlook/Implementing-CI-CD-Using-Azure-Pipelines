{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates the Elastic Container Service Cluster for the checkout service.",
  "Parameters": {
    "SecurityGroupIDs": {
      "Type": "CommaDelimitedList",
      "Default": "sg-c8d4b8b4"
    },
    "VpcID": {
      "Type": "String",
      "Default": "vpc-0e30aa68"
    },
    "SubnetIDs": {
      "Type": "CommaDelimitedList",
      "Default": "subnet-9049279c,subnet-3e8ac665,subnet-e10150cc,subnet-9dbe35a1,subnet-886e68c1,subnet-897800ec"
    },
    "LatestECSOptimizedAMI": {
      "Description": "AMI ID",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    },
    "UserData": {
      "Type": "String",
      "Description": "User data required for Launch Template and Spot Fleet",
      "Default": "#!/bin/bash \necho ECS_CLUSTER=test-checkout >> /etc/ecs/ecs.config;"
    },
    "IamRoleInstanceProfile": {
      "Type": "String",
      "Description": "Specifies the Name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance",
      "Default": "arn:aws:iam::643152877624:instance-profile/ecsInstanceRole"
    },
    "ContainerTag": {
      "Type": "String",
      "Default": "latest"
    }
  },
  "Resources": {
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": { "Ref": "AWS::StackName" },
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled"
          }
        ],
        "Configuration": {
          "ExecuteCommandConfiguration": {
            "Logging": "DEFAULT"
          }
        },
        "ServiceConnectDefaults": {
          "Namespace": { "Ref": "AWS::StackName" }
        },
        "Tags": []
      }
    },
    "ECSTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "HealthCheck": {
              "Command": ["curl", "-f", "http://localhost:5015/health"],
              "Interval": 30,
              "Retries": 3,
              "StartPeriod": 30,
              "Timeout": 5
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  { "Ref": "AWS::AccountId" },
                  ".dkr.ecr.",
                  { "Ref": "AWS::Region" },
                  ".amazonaws.com/packt-store-checkout:",
                  { "Ref": "ContainerTag" }
                ]
              ]
            },
            "Name": "checkout",
            "PortMappings": [
              {
                "ContainerPort": 5015,
                "HostPort": 5015,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "512",
        "Family": { "Ref": "AWS::StackName" },
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": ["EC2"],
        "ExecutionRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/ecsTaskExecutionRole"
            ]
          ]
        },
        "TaskRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/ecsTaskExecutionRole"
            ]
          ]
        }
      }
    },
    "ECSLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "DependsOn": "ECSCluster",
      "Properties": {
        "LaunchTemplateData": {
          "ImageId": {
            "Ref": "LatestECSOptimizedAMI"
          },
          "InstanceType": "t3.large",
          "KeyName": "eks",
          "IamInstanceProfile": {
            "Arn": {
              "Ref": "IamRoleInstanceProfile"
            }
          },
          "UserData": {
            "Fn::Base64": {
              "Ref": "UserData"
            }
          }
        }
      }
    },
    "ECSAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": ["ECSCluster", "ECSLaunchTemplate"],
      "Properties": {
        "MinSize": "1",
        "MaxSize": 5,
        "DesiredCapacity": "1",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "ECSLaunchTemplate"
          },
          "Version": {
            "Fn::GetAtt": ["ECSLaunchTemplate", "LatestVersionNumber"]
          }
        },
        "VPCZoneIdentifier": {
          "Ref": "SubnetIDs"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::Join": [" - ", ["ECS Instance", { "Ref": "AWS::StackName" }]]
            }
          }
        ]
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": ["ECSCluster", "ECSTaskDefinition", "Listener"],
      "Properties": {
        "Cluster": { "Ref": "AWS::StackName" },
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Base": 0,
            "Weight": 1
          }
        ],
        "TaskDefinition": {
          "Fn::Join": [
            "",
            [
              "arn:aws:ecs:",
              { "Ref": "AWS::Region" },
              ":",
              { "Ref": "AWS::AccountId" },
              ":task-definition/",
              { "Ref": "AWS::StackName" }
            ]
          ]
        },
        "ServiceName": "checkout",
        "SchedulingStrategy": "REPLICA",
        "DesiredCount": 1,
        "LoadBalancers": [
          {
            "ContainerName": "checkout",
            "ContainerPort": 5015,
            "LoadBalancerName": {
              "Ref": "AWS::NoValue"
            },
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": {
              "Ref": "SecurityGroupIDs"
            },
            "Subnets": {
              "Ref": "SubnetIDs"
            }
          }
        },
        "PlatformVersion": "LATEST",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100,
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": true
          }
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "ServiceConnectConfiguration": {
          "Enabled": false
        },
        "Tags": [],
        "EnableECSManagedTags": true
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Type": "application",
        "Name": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-lb"]] },
        "SecurityGroups": {
          "Ref": "SecurityGroupIDs"
        },
        "Subnets": {
          "Ref": "SubnetIDs"
        }
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/health",
        "Name": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-tg"]] },
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "HealthCheckProtocol": "HTTP",
        "VpcId": {
          "Ref": "VpcID"
        }
      }
    },
    "Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "DependsOn": ["LoadBalancer", "TargetGroup"],
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancer"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "EC2CapacityProvider": {
      "Type": "AWS::ECS::CapacityProvider",
      "Properties": {
        "AutoScalingGroupProvider": {
          "AutoScalingGroupArn": {
            "Ref": "ECSAutoScalingGroup"
          },
          "ManagedScaling": {
            "Status": "ENABLED",
            "TargetCapacity": 100
          },
          "ManagedTerminationProtection": "DISABLED"
        }
      }
    },
    "ClusterCPAssociation": {
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
      "DependsOn": "ECSCluster",
      "Properties": {
        "Cluster": { "Ref": "AWS::StackName" },
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
          { "Ref": "EC2CapacityProvider" }
        ],
        "DefaultCapacityProviderStrategy": [
          {
            "Base": 0,
            "Weight": 1,
            "CapacityProvider": { "Ref": "EC2CapacityProvider" }
          }
        ]
      }
    }
  },
  "Outputs": {
    "CheckoutUrl": {
      "Description": "Url of the checkout service",
      "Value": {
        "Fn::Join": [
          "",
          ["http://", { "Fn::GetAtt": ["LoadBalancer", "DNSName"] }, "/"]
        ]
      }
    }
  }
}
